// Generated by data binding compiler. Do not edit!
package com.goldcompany.apps.koreabike.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.fragment.app.FragmentContainerView;
import com.goldcompany.apps.koreabike.R;
import com.goldcompany.apps.koreabike.ui.bike_map.BikeMapHandler;
import com.goldcompany.apps.koreabike.ui.bike_map.BikeMapViewModel;
import com.google.android.material.button.MaterialButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentBikeMapBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout bikeMapSearchLayout;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final ConstraintLayout mapLayout;

  @NonNull
  public final AppCompatEditText searchAddressButton;

  @NonNull
  public final MaterialButton searchNavigationPathButton;

  @Bindable
  protected BikeMapViewModel mViewModel;

  @Bindable
  protected BikeMapHandler mHandler;

  protected FragmentBikeMapBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout bikeMapSearchLayout, FragmentContainerView map, ConstraintLayout mapLayout,
      AppCompatEditText searchAddressButton, MaterialButton searchNavigationPathButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bikeMapSearchLayout = bikeMapSearchLayout;
    this.map = map;
    this.mapLayout = mapLayout;
    this.searchAddressButton = searchAddressButton;
    this.searchNavigationPathButton = searchNavigationPathButton;
  }

  public abstract void setViewModel(@Nullable BikeMapViewModel viewModel);

  @Nullable
  public BikeMapViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setHandler(@Nullable BikeMapHandler handler);

  @Nullable
  public BikeMapHandler getHandler() {
    return mHandler;
  }

  @NonNull
  public static FragmentBikeMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_bike_map, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentBikeMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentBikeMapBinding>inflateInternal(inflater, R.layout.fragment_bike_map, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentBikeMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_bike_map, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentBikeMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentBikeMapBinding>inflateInternal(inflater, R.layout.fragment_bike_map, null, false, component);
  }

  public static FragmentBikeMapBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentBikeMapBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentBikeMapBinding)bind(component, view, R.layout.fragment_bike_map);
  }
}
