// Generated by Dagger (https://dagger.dev).
package com.goldcompany.apps.koreabike.data;

import com.goldcompany.apps.koreabike.api.KakaoApiService;
import com.goldcompany.apps.koreabike.api.NaverApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class KBikeRemoteDataSource_Factory implements Factory<KBikeRemoteDataSource> {
  private final Provider<KakaoApiService> kakaoApiServiceProvider;

  private final Provider<NaverApiService> naverApiServiceProvider;

  public KBikeRemoteDataSource_Factory(Provider<KakaoApiService> kakaoApiServiceProvider,
      Provider<NaverApiService> naverApiServiceProvider) {
    this.kakaoApiServiceProvider = kakaoApiServiceProvider;
    this.naverApiServiceProvider = naverApiServiceProvider;
  }

  @Override
  public KBikeRemoteDataSource get() {
    return newInstance(kakaoApiServiceProvider.get(), naverApiServiceProvider.get());
  }

  public static KBikeRemoteDataSource_Factory create(
      Provider<KakaoApiService> kakaoApiServiceProvider,
      Provider<NaverApiService> naverApiServiceProvider) {
    return new KBikeRemoteDataSource_Factory(kakaoApiServiceProvider, naverApiServiceProvider);
  }

  public static KBikeRemoteDataSource newInstance(KakaoApiService kakaoApiService,
      NaverApiService naverApiService) {
    return new KBikeRemoteDataSource(kakaoApiService, naverApiService);
  }
}
