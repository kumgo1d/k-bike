// Generated by Dagger (https://dagger.dev).
package com.goldcompany.apps.koreabike.data;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class KBikeRepository_Factory implements Factory<KBikeRepository> {
  private final Provider<KBikeRemoteDataSource> kBikeRemoteDataSourceProvider;

  private final Provider<KBikeLocalDataSource> kBikeLocalDataSourceProvider;

  public KBikeRepository_Factory(Provider<KBikeRemoteDataSource> kBikeRemoteDataSourceProvider,
      Provider<KBikeLocalDataSource> kBikeLocalDataSourceProvider) {
    this.kBikeRemoteDataSourceProvider = kBikeRemoteDataSourceProvider;
    this.kBikeLocalDataSourceProvider = kBikeLocalDataSourceProvider;
  }

  @Override
  public KBikeRepository get() {
    return newInstance(kBikeRemoteDataSourceProvider.get(), kBikeLocalDataSourceProvider.get());
  }

  public static KBikeRepository_Factory create(
      Provider<KBikeRemoteDataSource> kBikeRemoteDataSourceProvider,
      Provider<KBikeLocalDataSource> kBikeLocalDataSourceProvider) {
    return new KBikeRepository_Factory(kBikeRemoteDataSourceProvider, kBikeLocalDataSourceProvider);
  }

  public static KBikeRepository newInstance(KBikeRemoteDataSource kBikeRemoteDataSource,
      KBikeLocalDataSource kBikeLocalDataSource) {
    return new KBikeRepository(kBikeRemoteDataSource, kBikeLocalDataSource);
  }
}
