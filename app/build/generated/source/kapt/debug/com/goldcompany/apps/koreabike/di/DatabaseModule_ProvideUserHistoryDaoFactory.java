// Generated by Dagger (https://dagger.dev).
package com.goldcompany.apps.koreabike.di;

import com.goldcompany.apps.koreabike.db.KBikeDatabase;
import com.goldcompany.apps.koreabike.db.history_address.UserHistoryAddressDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideUserHistoryDaoFactory implements Factory<UserHistoryAddressDAO> {
  private final DatabaseModule module;

  private final Provider<KBikeDatabase> kBikeDatabaseProvider;

  public DatabaseModule_ProvideUserHistoryDaoFactory(DatabaseModule module,
      Provider<KBikeDatabase> kBikeDatabaseProvider) {
    this.module = module;
    this.kBikeDatabaseProvider = kBikeDatabaseProvider;
  }

  @Override
  public UserHistoryAddressDAO get() {
    return provideUserHistoryDao(module, kBikeDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideUserHistoryDaoFactory create(DatabaseModule module,
      Provider<KBikeDatabase> kBikeDatabaseProvider) {
    return new DatabaseModule_ProvideUserHistoryDaoFactory(module, kBikeDatabaseProvider);
  }

  public static UserHistoryAddressDAO provideUserHistoryDao(DatabaseModule instance,
      KBikeDatabase kBikeDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserHistoryDao(kBikeDatabase));
  }
}
